##clear memory
rm(list=ls())
library(tidyr)
library(dplyr)
library(plyr)
library(stringr)
library(ggplot2)
# ------------------------------------------------------
project.dir <- "/home/petr0vsk/Project3"
stopifnot( dir.exists(file.path(project.dir))  )
setwd(file.path(project.dir))
#steps: Number of steps taking in a 5-minute interval (missing values are coded as NA)
#date: The date on which the measurement was taken in YYYY-MM-DD format
#interval: Identifier for the 5-minute interval in which measurement was taken
steps.raw <- read.csv("activity.csv",  header = TRUE) 
str(steps.raw)
# ================================ 1 ============================
# ---- Histogram of the total number of steps taken each day ---
# ---- What is mean total number of steps taken per day? ----
mean.steps.per.day <- steps.raw %>%
    group_by(date) %>%
    summarise_each(funs( sum(steps, na.rm = T) ), steps = steps) %>%
    as.data.frame()

mn <- round(mean(mean.steps.per.day$steps, na.rm = T),2)
md <- median(mean.steps.per.day$steps, na.rm = TRUE)
# - - - - - - - - - -plot histogramm  - - - - - - - - - - -
plot.new()
hist(mean.steps.per.day$steps, main = "Total number of steps taken each day", 
     breaks = 61,
     xlab = "Steps per day", ylab = "Frequency",
     col="black",
     border="white")
box(bty="l")
grid(nx=NA,ny=NULL,lty=1,lwd=1,col="gray")
rug(mean.steps.per.day$steps)

# ------ mean and median ---
print(paste0("mean = ", mn))
print(paste0("median = ", md))


# - - - - - - - - - - - - - - - - - - - - - 
# ================================= 2 ==========================
# --- what is the average daily activity pattern? -----
daily.activity.average.with.NA <- steps.raw %>%
    group_by(interval) %>%
    summarise_each(funs(mean(steps, na.rm = TRUE)), steps = steps)  
# --------------- 
# 5-minute interval contains the maximum number of steps   
max.steps <- daily.activity.average.with.NA[which.max(daily.activity.average.with.NA$steps),]
# vector for x-axes labels 
brake.vec <- as.vector(seq(1,288,by=12))
plot.new()
ggplot(daily.activity.average.with.NA, aes(x=interval, y=steps)) +
    geom_line(colour = "darkblue") +                                                                                                          # breaks  = 2335
    geom_point(size=0.7) +
    scale_x_continuous(name = "Time interval (by 5-minyt step)", limits = c(0,tail(daily.activity.average.with.NA$interval, n=1)), breaks = daily.activity.average.with.NA$interval[brake.vec])  +
    scale_y_continuous(name = "Time series plot of the average number of steps taken", limits = c(0,max(daily.activity.average.with.NA$steps))) +
    ggtitle("Mean total number of steps taken per day") +
    theme(plot.title = element_text(hjust = 0.5)) +
    geom_vline(xintercept=max.steps$interval, linetype = 2, color="red") +
    geom_text(aes(max.steps$interval, label="\ninterval = 853;   steps = 206.2", y=50), angle=90, color="red") +
    theme(axis.text.x = element_text(angle=30, hjust=1, vjust=1)) +
    stat_smooth(colour="green", na.rm=TRUE) 
# 5-minute interval contains the maximum number of steps   
print(max.steps)
# ====================================== 3 =====================
# ------ Solve problem with missing value ------------------------
# how many missing value?
sum(is.na(steps.raw$steps)) 
#
#replase NA with median of interval
steps.raw.clear <- steps.raw
# replase value ----
for(i in 1:length(steps.raw.clear$steps))   {
    if( is.na(steps.raw.clear$steps[i]) )        {
        steps.raw.clear$steps[i]<- filter(daily.activity.average.with.NA, interval==steps.raw.clear$interval[i])%>%
                  select(steps) %>%
                  round(2)
    }#if..
}#for..
steps.raw.clear$steps <- unlist(steps.raw.clear$steps)
# ================================ 7 ============================
# ---- Histogram of the total number of steps taken each day ---
# ---- What is mean total number of steps taken per day? ----
mean.steps.per.day.clear <- steps.raw.clear %>%
    group_by(date) %>%
    summarise_each(funs( sum(steps) ), steps = steps) 
   

mn <- round(mean(mean.steps.per.day.clear$steps),2)
md <- median(mean.steps.per.day.clear$steps)
# - - - - - - - - - -plot histogramm  - - - - - - - - - - -
plot.new()
hist(mean.steps.per.day.clear$steps, main = "Total number of steps taken each day after missing values are imputed", 
     breaks = 61,
     xlab = "Steps per day", ylab = "Frequency",
     col="black",
     border="white")
box(bty="l")
grid(nx=NA,ny=NULL,lty=1,lwd=1,col="gray")
rug(mean.steps.per.day.clear$steps)

# ------ mean and median ---
print(paste0("after missing values are imputed mean = ", mn))
print(paste0("after missing values are imputed median = ", md))

# - ----- Are there differences in activity patterns between weekdays and weekends? ---
steps.raw.clear$date <- as.Date(steps.raw.clear$date)
for(i in 1:length(steps.raw.clear$steps))   {
      if( weekdays(steps.raw.clear$date[i]) %in% c("Saturday", "Sunday")  )   {
        steps.raw.clear$weekdays[i] <-  "weekday"     
                    }#if..
        else {
            steps.raw.clear$weekdays[i] <-  "weekend"
            #print("weekend")    
            
        } 
}#for..
mean.steps.raw.clear <- steps.raw.clear %>%
    group_by(date) %>%
    summarise_each(funs( sum(steps) ), steps = steps) 
plot.new()
ggplot(steps.raw.clear, aes(interval, steps)) + geom_line() + facet_grid(weekdays ~ .) + 
    xlab("5-minute interval") + ylab("Number of steps")









